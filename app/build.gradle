buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.stanfy.spoon:spoon-gradle-plugin:1.2.2'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'spoon'
apply plugin: 'realm-android'

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.2'
    defaultConfig {
        applicationId 'com.mamewo.podplayer0'
        minSdkVersion 30
        targetSdkVersion 30
        versionCode 18
        versionName '1.3.1'

        //For espresso
        //testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        release {
            if (System.getenv('KEYSTORE') != null) {
                storeFile file(System.getenv('KEYSTORE'))
                storePassword System.getenv('KEYSTORE_PASSWORD')
                keyAlias System.getenv('KEY_ALIAS')
                keyPassword System.getenv('KEY_PASSWORD')
            } else {
                storeFile null
                storePassword ''
                keyAlias ''
                keyPassword ''
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    def isRunningOnTravis = System.getenv("CI") == "true"

    if (isRunningOnTravis) {
        // configure keystore
        signingConfigs.release.storeFile = file("../podplayer.keystore")
        signingConfigs.release.storePassword = System.getenv("keystore_password")
        signingConfigs.release.keyAlias = System.getenv("keystore_alias")
        signingConfigs.release.keyPassword = System.getenv("keystore_alias_password")
    }

    lintOptions {
        abortOnError false
    }
}

spoon {
    //For espresso
    // configurations.all {
    //   resolutionStrategy.force 'com.android.support:support-annotations:23.1.1'
    // }

    //instrumentationArgs = ['package=com.mamewo.podplayer0.tests']
    if (project.hasProperty('spoonClassName')) {
        className = project.spoonClassName
    } else {
        className = 'com.mamewo.podplayer0.tests.TestPodplayerActivity'
    }
    if (project.hasProperty('spoonMethodName')) {
        methodName = project.spoonMethodName
    }
    if (project.hasProperty('spoonOutput')) {
        baseOutputDir = file('$buildDir/' + project.spoonOutput)
    }
    debug = true

    // className = 'com.mamewo.podplayer0.tests.TestPodplayerActivity'
    //methodName = 'testAddPodcast'
    //from 1.5.0?
    //codeCoverage = true
}

dependencies {
    implementation project(':pulltorefresh')

    implementation 'androidx.preference:preference:1.1.1'

    implementation 'com.squareup.okhttp3:okhttp:3.12.3'
    //implementation 'com.squareup.okhttp3:okhttp:4.6.0'
    implementation 'commons-io:commons-io:2.4'

    implementation 'com.android.support:support-compat:28.0.0'
    implementation 'com.android.support:appcompat-v7:25.1.0'
    implementation "com.android.support:support-compat:28.0.0"

    implementation 'com.android.support:preference-v7:24.2.1'
    implementation 'com.android.support:cardview-v7:24.2.1'
    implementation 'com.android.support:recyclerview-v7:24.2.1'
    implementation 'com.journeyapps:zxing-android-embedded:3.4.0'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'io.realm:android-adapters:1.4.0'

    //compile 'com.google.firebase:firebase-core:10.0.1'
    androidTestImplementation 'com.jayway.android.robotium:robotium-solo:5.6.3'
    androidTestImplementation 'com.squareup.spoon:spoon-client:1.6.4'
    androidTestImplementation 'com.jraska:falcon-spoon-compat:1.0.3'
}
